#!/bin/bash

# Archivo para almacenar la ruta de destino
DEST_FILE=".rsynckudos_dest"

# Variable para controlar si se debe usar --delete
DELETE_OPTION=""

# Verifica si el primer argumento es "--delete"
if [ "$1" == "--delete" ]; then
    DELETE_OPTION="--delete"
    shift # Elimina el primer argumento (es decir, --delete) de la lista de argumentos
fi

# Verifica si el archivo de ruta de destino existe en el directorio actual
if [ ! -f "$DEST_FILE" ]; then
    echo -n "Ingresa la ruta base de destino: "
    read DEST_BASE_PATH
    echo "$DEST_BASE_PATH" > "$DEST_FILE"
else
    DEST_BASE_PATH=$(cat "$DEST_FILE")
fi

# Verifica si la carpeta de destino está vacía
if [ -d "$DEST_BASE_PATH" ] && [ -z "$(ls -A "$DEST_BASE_PATH")" ]; then
    echo "La carpeta de destino '$DEST_BASE_PATH' está vacía. Saliendo..."
    exit 1
fi

# Verifica que se haya proporcionado al menos un argumento después de --delete
if [ $# -lt 1 ]; then
    echo "Uso: rsynckudos [--delete] ruta_origen1 [ruta_origen2 ...]"
    exit 1
fi

# Recorre todas las rutas de origen proporcionadas como argumentos
for SRC_PATH in "$@"
do
    # Verifica si la ruta de origen existe
    if [ ! -e "$SRC_PATH" ]; then
        echo "La ruta de origen no existe: $SRC_PATH"
        continue
    fi  

    # Construye la ruta de destino concatenando la ruta base y la de origen
    DEST_PATH="$DEST_BASE_PATH/$SRC_PATH"

    # Asegura que el directorio de destino exista
    DEST_DIR=$(dirname "$DEST_PATH")
    mkdir -p "$DEST_DIR"

    # Ejecuta el comando rsync con la opción --delete si se ha especificado
    rsync --progress -ah --no-g $DELETE_OPTION "$SRC_PATH" "$DEST_PATH"
done

