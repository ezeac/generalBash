#!/bin/bash
# Gestor Avanzado de Disposición de Ventanas v5.2
# Guarda/restaura posiciones, tamaños y orden de apilamiento
# Usa xdotool para geometría en lugar de wmctrl

# Configuración
LAYOUT_DIR="$HOME/.window_layouts"
SCRIPT_PATH="$(realpath "$0")"

# Función para guardar disposiciones
save_layout() {
    local num="$1"
    # Verificar herramientas
    if ! command -v xdotool &> /dev/null || ! command -v wmctrl &> /dev/null; then
        notify-send "Gestor Ventanas" "Faltan herramientas esenciales. Ejecuta '${SCRIPT_PATH} install'"
        return 1
    fi
    
    # Crear directorio si no existe
    mkdir -p "$LAYOUT_DIR"
    
    # Guardar ventanas visibles usando xdotool
    {
        wmctrl -l | while read -r line; do
            win_id=$(echo "$line" | awk '{print $1}')
            # Verificar que la ventana exista
            if xdotool getwindowname "$win_id" &> /dev/null; then
                output=$(xdotool getwindowgeometry --shell "$win_id" 2>/dev/null)
                if [ -n "$output" ]; then
                    # Extraer valores usando formato --shell de xdotool
                    x=$(echo "$output" | awk -F= '/X=/ {print $2}')
                    y=$(echo "$output" | awk -F= '/Y=/ {print $2}')
                    width=$(echo "$output" | awk -F= '/WIDTH=/ {print $2}')
                    height=$(echo "$output" | awk -F= '/HEIGHT=/ {print $2}')
                    
                    # Solo guardar ventanas con geometría válida
                    if [[ -n "$x" && -n "$y" && -n "$width" && -n "$height" ]]; then
                        echo "$win_id $x $y $width $height"
                    fi
                fi
            fi
        done
    } > "${LAYOUT_DIR}/layout_${num}"
    
    # Capturar orden de apilamiento (de abajo a arriba)
    xprop -root _NET_CLIENT_LIST_STACKING | \
        awk -F'# ' '{print $2}' | \
        tr -d ',' | \
        xargs -n1 > "${LAYOUT_DIR}/stack_${num}"
    
    # Obtener ventana activa
    active_win=$(xdotool getactivewindow)
    echo "$active_win" > "${LAYOUT_DIR}/active_${num}"
    
    notify-send "Gestor Ventanas" "Disposición ${num} guardada\nVentanas: $(wc -l < "${LAYOUT_DIR}/layout_${num}")"
}

# Función para restaurar disposiciones
restore_layout() {
    local num="$1"
    # Verificar existencia de datos
    if [[ ! -f "${LAYOUT_DIR}/layout_${num}" ]]; then
        notify-send "Gestor Ventanas" "⚠️ No hay disposición guardada para ${num}"
        return 1
    fi
    
    # Restaurar geometría (sin manejo de escritorios)
    while IFS= read -r line; do
        read -a params <<< "$line"
        win_id="${params[0]}"
        
        # Solo procesar ventanas existentes
        if xdotool getwindowname "$win_id" &> /dev/null; then
            # Restaurar geometría
            xdotool windowmove "$win_id" "${params[1]}" "${params[2]}"
            xdotool windowsize "$win_id" "${params[3]}" "${params[4]}"
        fi
    done < "${LAYOUT_DIR}/layout_${num}"
    
    # Restaurar orden de apilamiento
    if [[ -f "${LAYOUT_DIR}/stack_${num}" ]]; then
        tail -n 3 "${LAYOUT_DIR}/stack_${num}" | while IFS= read -r win_id; do
            if xdotool getwindowname "$win_id" &> /dev/null; then
                xdotool windowactivate "$win_id" >/dev/null 2>&1
            fi
        done
    fi
    
    # Restaurar ventana activa
    #if [[ -f "${LAYOUT_DIR}/active_${num}" ]]; then
    #    active_win=$(cat "${LAYOUT_DIR}/active_${num}")
    #    if xdotool getwindowname "$active_win" &> /dev/null; then
    #        xdotool windowactivate "$active_win" >/dev/null 2>&1
    #    fi
    #fi
    
    #notify-send "Gestor Ventanas" "Disposición ${num} restaurada"
}

# Función para configurar atajos de teclado
setup_keybindings() {
    # Instalar dependencias
    if ! command -v wmctrl &> /dev/null || ! command -v xdotool &> /dev/null; then
        echo "Instalando dependencias..."
        sudo apt update
        sudo apt install -y wmctrl xdotool
    fi

    # Crear directorio para disposiciones
    mkdir -p "$LAYOUT_DIR"

    # Configurar atajos para números 1-9
    local binding_index=100
    local new_bindings=""

    for i in {1..9}; do
        # Atajo Guardar (Alt+Shift+Num)
        gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom${binding_index}/" name "'Guardar Disposición ${i}'"
        gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom${binding_index}/" command "'${SCRIPT_PATH} save ${i}'"
        gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom${binding_index}/" binding "'<Alt><Shift>${i}'"
        new_bindings+="'/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom${binding_index}/', "
        ((binding_index++))

        # Atajo Restaurar (Alt+Num)
        gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom${binding_index}/" name "'Restaurar Disposición ${i}'"
        gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom${binding_index}/" command "'${SCRIPT_PATH} restore ${i}'"
        gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom${binding_index}/" binding "'<Alt>${i}'"
        new_bindings+="'/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom${binding_index}/', "
        ((binding_index++))
    done

    # Actualizar lista de atajos
    new_bindings="${new_bindings%, }"
    gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "[${new_bindings}]"

    notify-send "Gestor Ventanas" "Atajos configurados!\nGuardar: Alt+Shift+[1-9]\nRestaurar: Alt+[1-9]"
    echo "Instalación completada. Los atajos estarán disponibles después de reiniciar la sesión."
}

# Función para revertir configuración
uninstall() {
    # Eliminar directorio de disposiciones
    rm -rf "$LAYOUT_DIR"

    # Buscar y eliminar nuestros keybindings
    current_bindings=$(gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings | tr -d "[]'")
    IFS=', ' read -ra bindings_array <<< "$current_bindings"

    new_bindings=()
    for binding in "${bindings_array[@]}"; do
        if [[ ! "$binding" =~ custom1[0-9][0-9]/ ]]; then
            [ -n "$binding" ] && new_bindings+=("'$binding'")
        fi
    done

    # Convertir a formato gsettings
    if [ ${#new_bindings[@]} -gt 0 ]; then
        updated_bindings=$(IFS=,; echo "[${new_bindings[*]}]")
        gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "$updated_bindings"
    else
        gsettings reset org.gnome.settings-daemon.plugins.media-keys custom-keybindings
    fi

    notify-send "Gestor Ventanas" "Configuración eliminada\nAtajos desinstalados"
}

# Menú principal
case "$1" in
    save)
        save_layout "$2"
        ;;
    restore)
        restore_layout "$2"
        ;;
    install)
        setup_keybindings
        ;;
    uninstall)
        uninstall
        ;;
    *)
        echo -e "Gestor Avanzado de Disposición de Ventanas v5.2\n"
        echo "Uso: $0 [comando] [número 1-9]"
        echo "Comandos disponibles:"
        echo "  install     : Configura los atajos de teclado"
        echo "  save <num>  : Guarda disposición de ventanas (1-9)"
        echo "  restore <num>: Restaura disposición de ventanas (1-9)"
        echo "  uninstall   : Elimina configuración y atajos"
        echo -e "\nEjemplos:"
        echo "  $0 install"
        echo "  $0 save 1"
        echo "  $0 restore 1"
        exit 1
        ;;
esac

